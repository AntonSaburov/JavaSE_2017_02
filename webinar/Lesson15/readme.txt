CVS
SVN
ClearCase
SourceSafe
Git


1. Хранить исходные коды (файлы) на сервере
2. Загружать исходники с сервера
3. Наложить таг
4. Создать бранч
5. Смержить - слить - соединить

Клиент:
1. Закачать исходники с сервера
2. Залить исходники на сервер
3. Обновить исходники с сервера

1. Моя работающая - затагана
2. Друга - не работающая - не затагана


1. Тег - tag
2. Бранч - branch
3. Merge

1. Сервер где хранятся исходники - http://github.com
2. Клиентское приложение


Особенности Git
1. Хранение репозитория на клиенте
2. Хранение файлов идет комитами



0. git init - создать локальный репозиторий
0. git remote add <name of remote> <https://>
0. git clone - вытаскивание существующего уделенного репозитория
0. Файл .gitignore


1. git status - посмотреть статус
2. git add - добавить новые файлы
3. git commit - закоммитить изменения в локальный репозиторий
 - -m - добавить комментарий сразу
 - -am - миновать стадию подготовки и сразу коммитить
4. git checkout - вытащить последние версии файлов (указанных)
5. git log - просмотр списка коммитов

6. git push - перенос коммитов в удаленный репозиторий
7. git fetch —all - вытащить из удаленного репозитория все дополнительные кометы
8. git pull - мержинг текущего состояния с новыми коммитами


Branches
1. git checkout -b <branch_name> - создать новый бранч и перейти в него
2. git branch - посмотреть список бранчей
  - a, v, v   - -avv
3. git checkout <branch_name> - переход на указанный бранч
4. git merge <branch> - подтягивание изменений из указанного бранча в текущий




1. Создать отдельный бранч от master
2. Вносите изменения в свой бранч
2.1 Регулярно подтягиваете изменения в master и оттуда делаете merge с свой бранч 
- git fetch —all
  Если master менялся
  - git checkout master, git pull
  - git checkout <local_branch>, git merge master - решаете проблемы
3. Вносите изменения из своего бранча в master
- по сути повторить пункт 2.1 а потом сделать
- git checkout master
- git merge <local_branch>
- git push




